----------------------------------------->> -- Grand Theft International (GTi)-- Author: Ares-- Date: 07 Aug 2015-- Resource: GTIrobberies/atm/atm.slua-- Version: 1.0----------------------------------------->>ATMs = exports.GTIbank:getATMsTable()local ATM_PROGRESS_TIME = 120000local ATM_TIMEOUT = 300000local ATM_PICKUPS = 12local ATM_ROB_PAY_PER_PICKUP = 388local atmCooldown = {}local atmBag = {}local atmBagColShape = {}local atmTimer = {}local atmSerial = {}addEventHandler("onResourceStart", root, 	function ( res ) 		if ( getResourceName(res) == "GTIbank" or res == resourceRoot ) then			ATMs = exports.GTIbank:getATMsTable()		end 	end)function onATMShapeHit ( element, dim )	if ( isElement(element) and getElementType(element) == "player" and dim ) then		if ( not isPedInVehicle(element) and isPedOnGround(element) ) then			if ( exports.AresMisc:isAbleToCrime(element) ) then				if ( atmIsAbleToRob(element) and not atmIsPlayerRobbing (element) ) then					bindKey(element, "N", "down", atmStartRobbing)					drawNote('ATMRobbery', 'Press [N] to rob this ATM', element, 255, 0, 0, 5000)				else					drawNote('ATMRobbery', 'You cannot rob this ATM at the moment, you must wait '.. atmGetTimeOut ( element ) .. ' seconds', element, 255, 0, 0, 5000)				end			end		end	endendfunction onATMShapeLeave ( element, dim )	if ( isElement(element) and getElementType(element) == "player" and dim ) then		if ( not isPedInVehicle(element) and isPedOnGround(element) ) then			unbindKey(element, "N", "down", atmStartRobbing)			drawNote('ATMRobbery', '', element, 0, 0, 0, 1)		end	endendfunction atmIsAbleToRob ( player )	return not isTimer(atmCooldown[player])endfunction atmIsPlayerRobbing ( player )	return isElement(atmBag[player])endfunction atmGetTimeOut ( player )	if isTimer ( atmCooldown[player] ) then		local miliseconds = getTimerDetails ( atmCooldown[player] )		return math.ceil( miliseconds / 1000 )	else		return false	endendfunction atmSetTimeOut ( player, time )	atmCooldown[player] = setTimer( function (player) atmCooldown[player] = nil end, time, 1, player)	--atmCooldown[player] = setTimer( function (player) exports.GTIhud:dm("ATM Robbery - 3 Min. Passed", player, 0, 255, 0) atmCooldown[player] = nil end, time, 1, player) -- annoying afendfunction atmDrawProgress ( player, time )	exports.GTIhud:drawProgressBar( 'ATMRobbery_ProgressBar', 'ATM Robbery Progress', player, 255, 0, 0, time )endfunction onATMPickupHit ( element )	if ( isPedInVehicle(element) ) then return end	if ( getElementData(source, "ATMRobbery.owner") == element ) then		atmPay(element)		setTimer(			function (pickup)				destroyElement(pickup)			end, 50, 1, source)	else		cancelEvent()	endendfunction onATMRobberyComplete ( player )		local x, y, z = getElementPosition( atmBag[player] )		for index = 1, ATM_PICKUPS do			local offset = index*0.1			local randomNumber = math.random(0.1, 0.6)			local pickup = createPickup(x-offset, y+randomNumber, z, 3, 1212, 1)			setElementData(pickup, "ATMRobbery.owner", player)			addEventHandler("onPickupHit", pickup, onATMPickupHit)		end		for explosions = 1, 3 do			createExplosion(x, y, z, 0)		end		destroyElement(atmBag[player])		destroyElement(atmBagColShape[player])		atmBag[player] = nil		atmBagColShape[player] = nil        exports.GTIcriminals:modifyPlayerCriminalRep(player, 915, "ATM Robbery")        exports.GTIcriminals:modifyPlayerTaskProgress(player, "ATM Robbery", 1)		triggerClientEvent(root, "GTIrobberies.atmStopRobbing", root, player)endfunction atmPay ( player )	if ( exports.GTIcriminals:isCriminal(player) ) then        exports.GTIcriminals:givePlayerTaskMoney(player, "ATM Robbery", ATM_ROB_PAY_PER_PICKUP)	else		exports.GTIbank:GPM(player, ATM_ROB_PAY_PER_PICKUP, "ATM Robbery")	endendfunction atmStartRobbing ( element )	unbindKey(element, 'N', 'down', atmStartRobbing)	if ( isElement(element) ) then		exports.GTIanims:setJobAnimation(element, "BOMBER", "BOM_Plant", 2500, false, false, true, false )		toggleAllControls(element, false)		setTimer(toggleAllControls, 2500, 1, element, true)		atmDrawProgress ( element, ATM_PROGRESS_TIME )		atmSetTimeOut(element, ATM_TIMEOUT)		exports.GTIpoliceWanted:chargePlayer ( element, 24 )		local x, y, z = getElementPosition(element)		atmBag [ element ] = createObject( 1654, x+0.3, y, z-0.9, -90, 0, 0)		triggerClientEvent(root, "GTIrobberies.setObjectUnbreakable", root, atmBag[element] )				local x, y, z = getElementPosition( atmBag[element] )		atmBagColShape [ element ] = createColSphere ( x, y, z, 2 )		setElementData(atmBagColShape[element], "atmParent", atmBag[element])		setElementData(atmBagColShape[element], "atmOwner", element)		addEventHandler("onColShapeHit", atmBagColShape[element], onATMBagColShapeHit)		addEventHandler("onColShapeLeave", atmBagColShape[element], onATMBagColShapeLeave)				atmTimer[element] = setTimer(onATMRobberyComplete, ATM_PROGRESS_TIME, 1, element)		local ms = getTimerDetails(atmTimer[element])		triggerClientEvent(root, "GTIrobberies.bomb", root, ms, atmBag[element], atmBagColShape[element])	endend			function stopRobbing (player)	if ( isElement(atmBag[player]) )then		destroyElement(atmBag[player])		destroyElement(atmBagColShape[player])		atmBag[player] = nil		atmBagColShape[player] = nil	end	if ( isTimer(atmTimer[player]) ) then		killTimer(atmTimer[player])		atmTimer[player] = nil	end	triggerClientEvent(root, "GTIrobberies.atmStopRobbing", root, player)	exports.GTIhud:drawProgressBar( 'ATMRobbery_ProgressBar', '', player, 255, 0, 0, 1 )	drawNote('ATMRobbery', '', player, 255, 0, 0, 1)endaddEventHandler("onPlayerJailed", root, 	function ()		stopRobbing(source)	end)function onATMBagColShapeHit ( element, dim )	if ( isElement(element) and getElementType(element) == "player" and getElementData(source, "atmOwner") and dim ) then		if ( not isPedInVehicle(element) and exports.GTIemployment:getPlayerJob(element, true) == "Police Officer") then			bindKey(element, 'N', 'down', atmUnplanting, source)			drawNote('ATMRobbery', "Press [N] to defuse "..getPlayerName(getElementData(source, "atmOwner")).."'s bomb", element, 30, 125, 255, 5000)		end	endendfunction onATMBagColShapeLeave ( element, dim )	if ( isElement(element) and getElementType(element) == "player" and getElementData(source, "atmOwner") and dim ) then		unbindKey(element, 'N', 'down', atmUnplanting)		drawNote('ATMRobbery', '', element, 0, 0, 0, 1)	endendfunction atmUnplanting ( cop, _, _, colshape )	if ( not isElement(colshape) or getElementData(colshape, "atmIsBeingDefused") ) then		return exports.GTIhud:dm("This bomb " .. (isElement(colshape) and "was already defused" or "is already being defused!"), cop, 255, 0, 0)	end	local ms = getTimerDetails(atmTimer[getElementData(colshape, "atmOwner")])		if ( ms < 10000 ) then			unbindKey(cop, 'N', 'down', atmUnplanting)			exports.GTIhud:dm("It is too late! Get away from the bomb!", cop, 255, 0, 0)		return end		unbindKey(cop, 'N', 'down', atmUnplanting)		exports.GTIanims:setJobAnimation(cop, "BOMBER", "BOM_Plant", 7500, true, false, true, false )		exports.GTIhud:drawProgressBar( 'ATMRobbery_Unplanting', 'ATM Bomb Defusing Progress', cop, 30, 125, 255, 7500 )		local criminal = getElementData(colshape, "atmOwner")		setElementData(colshape, "atmIsBeingDefused", true)		toggleAllControls(cop, false)		setTimer(				function ( )					if ( isElement(cop) and not isPedDead(cop) ) then						exports.GTIhud:dm("The officer "..getPlayerName(cop).." defused your bomb.", criminal, 255, 0, 0)						exports.GTIhud:dm("You've succesfully defused "..getPlayerName(criminal).."'s bomb.", cop, 255, 0, 0)						stopRobbing(criminal)						exports.GTIemployment:modifyPlayerEmploymentExp(cop, 667, "Police Officer")						exports.GTIemployment:givePlayerJobMoney(cop, "Police Officer", 2500)							toggleAllControls(cop, true)					end					if ( isElement(colshape) ) then						setElementData(colshape, "atmIsBeingDefused", false)					end				end, 7500, 1)endfunction drawNote(id, text, player, r, g, b, time)	exports.GTIhud:drawNote(id, text, player, r, g, b, time)endfor _, ATMsData in ipairs ( ATMs or {} ) do	if ( not ATMsData.int and not ATMsData.dim ) then		local colshape = createColTube( ATMsData[1], ATMsData[2], ATMsData[3], 0.5, 2)		addEventHandler("onColShapeHit", colshape, onATMShapeHit)		addEventHandler("onColShapeLeave", colshape, onATMShapeLeave)	endendaddEventHandler("onPlayerWasted", root,	function ()		if ( atmIsPlayerRobbing(source) ) then			stopRobbing(source)		end	end)addEventHandler ("onPlayerArrested", root, 	function ()		if ( atmIsPlayerRobbing(source) ) then			stopRobbing(source)		end	end)addEventHandler("onPlayerGetJob", root,	function ()		unbindKey(source, "N", "down", atmStartRobbing)		drawNote('ATMRobbery', '', source, 0, 0, 0, 1)	end)addEventHandler("onPlayerGetJob", root,	function (job, new)		if ( job and new ~= "Criminal" and atmIsPlayerRobbing(source)) then			stopRobbing(source)		end	end)addEventHandler("onResourceStop", resourceRoot, 	function ()		for index, players in ipairs ( getElementsByType("player") ) do			if ( atmIsPlayerRobbing(players) ) then				stopRobbing(players)			end		end	end)addEventHandler("onPlayerQuit", root,	function ()		if ( atmIsPlayerRobbing(source) ) then			stopRobbing(source)		end	end)addEventHandler("onPlayerQuit", root,	function ()		if ( atmGetTimeOut(source) ) then			atmSerial[getPlayerSerial(source)] = atmGetTimeOut(source)		end	end)addEventHandler("onPlayerQuit", root,	function ()		for _, pickups in ipairs ( getElementsByType("pickup") ) do			if ( getElementData(pickups, "ATMRobbery.owner") == source ) then				removeEventHandler("onPickupHit", pickups, onATMPickupHit)				destroyElement(pickups)			end		end	end)addEventHandler("onPlayerArrested", root,	function ()		for _, pickups in ipairs ( getElementsByType("pickup") ) do			if ( getElementData(pickups, "ATMRobbery.owner") == source ) then				removeEventHandler("onPickupHit", pickups, onATMPickupHit)				destroyElement(pickups)			end		end	end)addEventHandler("onPlayerWasted", root,	function ()		for _, pickups in ipairs ( getElementsByType("pickup") ) do			if ( getElementData(pickups, "ATMRobbery.owner") == source ) then				removeEventHandler("onPickupHit", pickups, onATMPickupHit)				destroyElement(pickups)			end		end	end)addEventHandler("onPlayerJoin", root,	function ()		for serial, cooldown in pairs ( atmSerial ) do			if ( getPlayerSerial(source) == serial ) then				atmSetTimeOut(source, cooldown*1000)				atmSerial[serial] = nil			end		end	end)