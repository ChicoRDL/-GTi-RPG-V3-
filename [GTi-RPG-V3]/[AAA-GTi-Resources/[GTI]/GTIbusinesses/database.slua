----------------------------------------->>
-- Grand Theft International (GTi)
-- Author: Ares
-- Date: 27 Dec 2015
-- Resource: GTIbusinesses/database.slua
-- Version: 1.0
----------------------------------------->>

local SERVER_PORT = 22003

local ipairs = ipairs
local type = type
local tonumber = tonumber

-- Database Start
------------------>>

local db = dbConnect("mysql", "dbname=gti;host=127.0.0.1", "GTI", "")
dbExec(db, "CREATE TABLE IF NOT EXISTS `businesses`(`id` INT NOT NULL AUTO_INCREMENT, PRIMARY KEY(id))")

local database1_online	-- Is 'businesses' Database Online?

local businesses = {}		-- 'businesses' Database Cache
local businessOwner = {}	-- Table of Business IDs by Owner
local maxBusinessID = 0	-- Highest Available businesses ID
--local DEFAULT_DELETE = 2592000 -- 30 days

addEvent("onDatabaseLoad", true)	-- Triggers when the database is ready

-- Database Cache
------------------>>

addEventHandler("onResourceStart", resourceRoot, function()
	dbQuery(function(qh)
		local result = dbPoll(qh, 0)
		businesses[0] = {}
		for i,row in ipairs(result) do
			businesses[row.id] = {}
			for column,value in pairs(row) do
				if (column ~= "id") then
					businesses[0][column] = true
					if (value == "true") then value = true end
					if (value == "false") then value = false end
					businesses[row.id][column] = value
					
					if (maxBusinessID < row.id) then
						maxBusinessID = row.id
					end
				end
			end
				-- Add Businesses Owners
			addOwnerCache(row.owner, row.id)
		end
		database1_online = true
		triggerEvent("onDatabaseLoad", resourceRoot, "businesses")
		--loadBusinesses(businesses)
	end, db, "SELECT * FROM `businesses`")
end)

-- Database Exports
-------------------->>

function setBusinessData(id, key, value)
	if (not database1_online) then return false end
	if (not id or not key) then return false end
	if (type(id) ~= "number" or type(key) ~= "string") then return false end
	if (type(businesses[id]) ~= "table") then
		businesses[id] = {}
		if (getServerPort() == SERVER_PORT) then
			dbExec(db, "INSERT INTO `businesses`(id) VALUES(?)", id)
		end
	end
	
	if (businesses[0][key] == nil) then
		if (getServerPort() == SERVER_PORT) then
			dbExec(db, "ALTER TABLE `businesses` ADD `??` text", key)
		end
		businesses[0][key] = true
	end
	
	businesses[id][key] = value
	if (value ~= nil) then
		if (getServerPort() == SERVER_PORT) then
			dbExec(db, "UPDATE `businesses` SET `??`=? WHERE id=?", key, tostring(value), id)
		end
	else
		if (getServerPort() == SERVER_PORT) then
			dbExec(db, "UPDATE `businesses` SET `??`=NULL WHERE id=?", key, id)
		end
	end
	if (maxBusinessID < id) then maxBusinessID = id end
	return true
end

function removeBusinessData(id)
	if (not database1_online) then return false end
	if (not id or type(id) ~= "number") then return false end
		-- Remove from Owner Cache
	local owner = getBusinessData(id, "owner")
	removeOwnerCache(owner, id)
	
	businesses[id] = nil
	dbExec(db, "DELETE FROM `businesses` WHERE `id`=?", id)
	return true
end

function getBusinessData(id, key)
	if (not database1_online) then return nil end
	if (not id or not key) then return nil end
	if (type(id) ~= "number" or type(key) ~= "string") then return nil end
	
	if (businesses[id] == nil) then return nil end
	if (businesses[id][key] == nil or businesses[id][key] == "nil") then return nil end
	
	return tonumber(businesses[id][key]) or businesses[id][key]
end

function getNextAvailibleID()
	return maxBusinessID+1
end

-- Owner Cache
--------------->>

function addOwnerCache(owner, id)
	if (not businessOwner[owner]) then businessOwner[owner] = {} end
	for i,v in ipairs(businessOwner[owner]) do
		if (v == id) then return true end
	end
	table.insert(businessOwner[owner], id)
	return true
end

function removeOwnerCache(owner, id)
	if (not businessOwner[owner]) then return end
	for i,v in ipairs(businessOwner[owner]) do
		if (v == id) then
			table.remove(businessOwner[owner], i)
			return true
		end
	end
	return false
end

function getPlayerTotalBusinesses(player)
	if (not isElement(player)) then return end
	local account = getPlayerAccount(player)
	if (isGuestAccount(account)) then return end
	local account = getAccountName(account)
	return businessOwner[account] or {}
end

function getAccountTotalBusinesses(account)
	if (not account or isGuestAccount(account)) then return end
	local account = getAccountName(account)
	return businessOwner[account] or {}
end


--[[ Auto-Sell Houses
--------------------------->>

setTimer(function()
	for houseID, data in pairs(businesses) do
		if ( type(data.owner) == "string" ) then
			local account = getAccount(data['owner'])
			if ( account ) then
				local lastLogin = exports.GTIaccounts:GAD(account, "lastLogin") or 0
				if ( tonumber(lastLogin) and tonumber(getRealTime().timestamp) > tonumber(lastLogin)+DEFAULT_DELETE) then
					sellHouseToSAHA(account, houseID)
				end
			end
		end
	end
end, 30000, 0)
]]
